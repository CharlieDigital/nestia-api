/**
 * @packageDocumentation
 * @module api.functional.workflow.update
 * @nestia Generated by Nestia - https://github.com/samchon/nestia
 */
//================================================================
import type { IConnection } from "@nestia/fetcher";
import { PlainFetcher } from "@nestia/fetcher/lib/PlainFetcher";

import type { OmitIWorkflowsteps } from "../../../structures/OmitIWorkflowsteps";

/**
 * Here, we want to have a payload for update that doesn't carry the step
 * curl -X POST http://localhost:3000/workflow/update -H "Content-Type: application/json" --data '{}' | jq
 * @controller AppController.updateWorkflow
 * @path POST /workflow/update
 * @nestia Generated by Nestia - https://github.com/samchon/nestia
 */
export async function updateWorkflow(
  connection: IConnection,
  workflow: updateWorkflow.Input,
): Promise<updateWorkflow.Output> {
  return PlainFetcher.fetch(
    {
      ...connection,
      headers: {
        ...connection.headers,
        "Content-Type": "application/json",
      },
    },
    {
      ...updateWorkflow.METADATA,
      template: updateWorkflow.METADATA.path,
      path: updateWorkflow.path(),
    },
    workflow,
  );
}
export namespace updateWorkflow {
  export type Input = OmitIWorkflowsteps;
  export type Output = OmitIWorkflowsteps;

  export const METADATA = {
    method: "POST",
    path: "/workflow/update",
    request: {
      type: "application/json",
      encrypted: false,
    },
    response: {
      type: "application/json",
      encrypted: false,
    },
    status: 201,
  } as const;

  export const path = () => "/workflow/update";
}
