/**
 * @packageDocumentation
 * @module api.functional.workflow.root
 * @nestia Generated by Nestia - https://github.com/samchon/nestia
 */
//================================================================
import type { IConnection } from "@nestia/fetcher";
import { PlainFetcher } from "@nestia/fetcher/lib/PlainFetcher";
import type { MinLength } from "typia/lib/tags/MinLength";

import type { OmitIWorkflowsteps } from "../../../structures/OmitIWorkflowsteps";

/**
 * Can it generate a random workflow hierarchy with omitted field?
 * curl http://localhost:3000/workflow/asdf/root | jq
 * @controller AppController.getRandomWorkflowNoStep
 * @path GET /workflow/:id/root
 * @nestia Generated by Nestia - https://github.com/samchon/nestia
 */
export async function getRandomWorkflowNoStep(
  connection: IConnection,
  id: string & MinLength<1>,
): Promise<getRandomWorkflowNoStep.Output> {
  return PlainFetcher.fetch(connection, {
    ...getRandomWorkflowNoStep.METADATA,
    template: getRandomWorkflowNoStep.METADATA.path,
    path: getRandomWorkflowNoStep.path(id),
  });
}
export namespace getRandomWorkflowNoStep {
  export type Output = OmitIWorkflowsteps;

  export const METADATA = {
    method: "GET",
    path: "/workflow/:id/root",
    request: null,
    response: {
      type: "application/json",
      encrypted: false,
    },
    status: 200,
  } as const;

  export const path = (id: string & MinLength<1>) =>
    `/workflow/${encodeURIComponent(id?.toString() ?? "null")}/root`;
}
