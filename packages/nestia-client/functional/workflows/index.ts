/**
 * @packageDocumentation
 * @module api.functional.workflows
 * @nestia Generated by Nestia - https://github.com/samchon/nestia
 */
//================================================================
import type { IConnection } from "@nestia/fetcher";
import { PlainFetcher } from "@nestia/fetcher/lib/PlainFetcher";

import type { IWorkflow } from "../../structures/IWorkflow";

/**
 * Can it generate a random workflow hierarchy?
 * curl http://localhost:3000/workflows | jq
 * @controller AppController.getRandomWorkflows
 * @path GET /workflows
 * @nestia Generated by Nestia - https://github.com/samchon/nestia
 */
export async function getRandomWorkflows(
  connection: IConnection,
): Promise<getRandomWorkflows.Output> {
  return PlainFetcher.fetch(connection, {
    ...getRandomWorkflows.METADATA,
    template: getRandomWorkflows.METADATA.path,
    path: getRandomWorkflows.path(),
  });
}
export namespace getRandomWorkflows {
  export type Output = IWorkflow[];

  export const METADATA = {
    method: "GET",
    path: "/workflows",
    request: null,
    response: {
      type: "application/json",
      encrypted: false,
    },
    status: 200,
  } as const;

  export const path = () => "/workflows";
}
